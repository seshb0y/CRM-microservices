// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: task.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace CRMSolution.Grpc.Tasks {
  public static partial class TaskGrpcService
  {
    static readonly string __ServiceName = "task.TaskGrpcService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest> __Marshaller_task_GetTaskByIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Tasks.GetTaskByIdResponse> __Marshaller_task_GetTaskByIdResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Tasks.GetTaskByIdResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Tasks.CreateTaskRequest> __Marshaller_task_CreateTaskRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Tasks.CreateTaskRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Tasks.CreateTaskResponse> __Marshaller_task_CreateTaskResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Tasks.CreateTaskResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Tasks.GetTaskByOrderIdResponse> __Marshaller_task_GetTaskByOrderIdResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Tasks.GetTaskByOrderIdResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsRequest> __Marshaller_task_GetTasksByOrderIdsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsResponse> __Marshaller_task_GetTasksByOrderIdsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsRequest> __Marshaller_task_GetTasksByUserIdsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsResponse> __Marshaller_task_GetTasksByUserIdsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Tasks.UpdateTaskRequest> __Marshaller_task_UpdateTaskRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Tasks.UpdateTaskRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Tasks.TaskInfo> __Marshaller_task_TaskInfo = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Tasks.TaskInfo.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Tasks.DeleteTaskRequest> __Marshaller_task_DeleteTaskRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Tasks.DeleteTaskRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Tasks.DeleteTaskResponse> __Marshaller_task_DeleteTaskResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Tasks.DeleteTaskResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Tasks.GetAllTasksRequest> __Marshaller_task_GetAllTasksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Tasks.GetAllTasksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Tasks.GetAllTasksResponse> __Marshaller_task_GetAllTasksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Tasks.GetAllTasksResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest, global::CRMSolution.Grpc.Tasks.GetTaskByIdResponse> __Method_GetTaskById = new grpc::Method<global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest, global::CRMSolution.Grpc.Tasks.GetTaskByIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTaskById",
        __Marshaller_task_GetTaskByIdRequest,
        __Marshaller_task_GetTaskByIdResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CRMSolution.Grpc.Tasks.CreateTaskRequest, global::CRMSolution.Grpc.Tasks.CreateTaskResponse> __Method_CreateTask = new grpc::Method<global::CRMSolution.Grpc.Tasks.CreateTaskRequest, global::CRMSolution.Grpc.Tasks.CreateTaskResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateTask",
        __Marshaller_task_CreateTaskRequest,
        __Marshaller_task_CreateTaskResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest, global::CRMSolution.Grpc.Tasks.GetTaskByOrderIdResponse> __Method_GetTaskByOrderId = new grpc::Method<global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest, global::CRMSolution.Grpc.Tasks.GetTaskByOrderIdResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTaskByOrderId",
        __Marshaller_task_GetTaskByIdRequest,
        __Marshaller_task_GetTaskByOrderIdResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsRequest, global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsResponse> __Method_GetTasksByOrderIds = new grpc::Method<global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsRequest, global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTasksByOrderIds",
        __Marshaller_task_GetTasksByOrderIdsRequest,
        __Marshaller_task_GetTasksByOrderIdsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsRequest, global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsResponse> __Method_GetTasksByUserIds = new grpc::Method<global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsRequest, global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetTasksByUserIds",
        __Marshaller_task_GetTasksByUserIdsRequest,
        __Marshaller_task_GetTasksByUserIdsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CRMSolution.Grpc.Tasks.UpdateTaskRequest, global::CRMSolution.Grpc.Tasks.TaskInfo> __Method_UpdateTask = new grpc::Method<global::CRMSolution.Grpc.Tasks.UpdateTaskRequest, global::CRMSolution.Grpc.Tasks.TaskInfo>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateTask",
        __Marshaller_task_UpdateTaskRequest,
        __Marshaller_task_TaskInfo);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CRMSolution.Grpc.Tasks.DeleteTaskRequest, global::CRMSolution.Grpc.Tasks.DeleteTaskResponse> __Method_DeleteTask = new grpc::Method<global::CRMSolution.Grpc.Tasks.DeleteTaskRequest, global::CRMSolution.Grpc.Tasks.DeleteTaskResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteTask",
        __Marshaller_task_DeleteTaskRequest,
        __Marshaller_task_DeleteTaskResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CRMSolution.Grpc.Tasks.GetAllTasksRequest, global::CRMSolution.Grpc.Tasks.GetAllTasksResponse> __Method_GetAllTasks = new grpc::Method<global::CRMSolution.Grpc.Tasks.GetAllTasksRequest, global::CRMSolution.Grpc.Tasks.GetAllTasksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllTasks",
        __Marshaller_task_GetAllTasksRequest,
        __Marshaller_task_GetAllTasksResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::CRMSolution.Grpc.Tasks.TaskReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of TaskGrpcService</summary>
    [grpc::BindServiceMethod(typeof(TaskGrpcService), "BindService")]
    public abstract partial class TaskGrpcServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CRMSolution.Grpc.Tasks.GetTaskByIdResponse> GetTaskById(global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CRMSolution.Grpc.Tasks.CreateTaskResponse> CreateTask(global::CRMSolution.Grpc.Tasks.CreateTaskRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CRMSolution.Grpc.Tasks.GetTaskByOrderIdResponse> GetTaskByOrderId(global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsResponse> GetTasksByOrderIds(global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsResponse> GetTasksByUserIds(global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CRMSolution.Grpc.Tasks.TaskInfo> UpdateTask(global::CRMSolution.Grpc.Tasks.UpdateTaskRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CRMSolution.Grpc.Tasks.DeleteTaskResponse> DeleteTask(global::CRMSolution.Grpc.Tasks.DeleteTaskRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CRMSolution.Grpc.Tasks.GetAllTasksResponse> GetAllTasks(global::CRMSolution.Grpc.Tasks.GetAllTasksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for TaskGrpcService</summary>
    public partial class TaskGrpcServiceClient : grpc::ClientBase<TaskGrpcServiceClient>
    {
      /// <summary>Creates a new client for TaskGrpcService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TaskGrpcServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for TaskGrpcService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public TaskGrpcServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TaskGrpcServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected TaskGrpcServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Tasks.GetTaskByIdResponse GetTaskById(global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTaskById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Tasks.GetTaskByIdResponse GetTaskById(global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTaskById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Tasks.GetTaskByIdResponse> GetTaskByIdAsync(global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTaskByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Tasks.GetTaskByIdResponse> GetTaskByIdAsync(global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTaskById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Tasks.CreateTaskResponse CreateTask(global::CRMSolution.Grpc.Tasks.CreateTaskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTask(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Tasks.CreateTaskResponse CreateTask(global::CRMSolution.Grpc.Tasks.CreateTaskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateTask, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Tasks.CreateTaskResponse> CreateTaskAsync(global::CRMSolution.Grpc.Tasks.CreateTaskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateTaskAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Tasks.CreateTaskResponse> CreateTaskAsync(global::CRMSolution.Grpc.Tasks.CreateTaskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateTask, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Tasks.GetTaskByOrderIdResponse GetTaskByOrderId(global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTaskByOrderId(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Tasks.GetTaskByOrderIdResponse GetTaskByOrderId(global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTaskByOrderId, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Tasks.GetTaskByOrderIdResponse> GetTaskByOrderIdAsync(global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTaskByOrderIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Tasks.GetTaskByOrderIdResponse> GetTaskByOrderIdAsync(global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTaskByOrderId, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsResponse GetTasksByOrderIds(global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTasksByOrderIds(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsResponse GetTasksByOrderIds(global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTasksByOrderIds, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsResponse> GetTasksByOrderIdsAsync(global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTasksByOrderIdsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsResponse> GetTasksByOrderIdsAsync(global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTasksByOrderIds, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsResponse GetTasksByUserIds(global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTasksByUserIds(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsResponse GetTasksByUserIds(global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetTasksByUserIds, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsResponse> GetTasksByUserIdsAsync(global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetTasksByUserIdsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsResponse> GetTasksByUserIdsAsync(global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetTasksByUserIds, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Tasks.TaskInfo UpdateTask(global::CRMSolution.Grpc.Tasks.UpdateTaskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTask(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Tasks.TaskInfo UpdateTask(global::CRMSolution.Grpc.Tasks.UpdateTaskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateTask, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Tasks.TaskInfo> UpdateTaskAsync(global::CRMSolution.Grpc.Tasks.UpdateTaskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateTaskAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Tasks.TaskInfo> UpdateTaskAsync(global::CRMSolution.Grpc.Tasks.UpdateTaskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateTask, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Tasks.DeleteTaskResponse DeleteTask(global::CRMSolution.Grpc.Tasks.DeleteTaskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTask(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Tasks.DeleteTaskResponse DeleteTask(global::CRMSolution.Grpc.Tasks.DeleteTaskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteTask, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Tasks.DeleteTaskResponse> DeleteTaskAsync(global::CRMSolution.Grpc.Tasks.DeleteTaskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteTaskAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Tasks.DeleteTaskResponse> DeleteTaskAsync(global::CRMSolution.Grpc.Tasks.DeleteTaskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteTask, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Tasks.GetAllTasksResponse GetAllTasks(global::CRMSolution.Grpc.Tasks.GetAllTasksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllTasks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Tasks.GetAllTasksResponse GetAllTasks(global::CRMSolution.Grpc.Tasks.GetAllTasksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllTasks, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Tasks.GetAllTasksResponse> GetAllTasksAsync(global::CRMSolution.Grpc.Tasks.GetAllTasksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllTasksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Tasks.GetAllTasksResponse> GetAllTasksAsync(global::CRMSolution.Grpc.Tasks.GetAllTasksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllTasks, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override TaskGrpcServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new TaskGrpcServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(TaskGrpcServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetTaskById, serviceImpl.GetTaskById)
          .AddMethod(__Method_CreateTask, serviceImpl.CreateTask)
          .AddMethod(__Method_GetTaskByOrderId, serviceImpl.GetTaskByOrderId)
          .AddMethod(__Method_GetTasksByOrderIds, serviceImpl.GetTasksByOrderIds)
          .AddMethod(__Method_GetTasksByUserIds, serviceImpl.GetTasksByUserIds)
          .AddMethod(__Method_UpdateTask, serviceImpl.UpdateTask)
          .AddMethod(__Method_DeleteTask, serviceImpl.DeleteTask)
          .AddMethod(__Method_GetAllTasks, serviceImpl.GetAllTasks).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, TaskGrpcServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetTaskById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest, global::CRMSolution.Grpc.Tasks.GetTaskByIdResponse>(serviceImpl.GetTaskById));
      serviceBinder.AddMethod(__Method_CreateTask, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CRMSolution.Grpc.Tasks.CreateTaskRequest, global::CRMSolution.Grpc.Tasks.CreateTaskResponse>(serviceImpl.CreateTask));
      serviceBinder.AddMethod(__Method_GetTaskByOrderId, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CRMSolution.Grpc.Tasks.GetTaskByIdRequest, global::CRMSolution.Grpc.Tasks.GetTaskByOrderIdResponse>(serviceImpl.GetTaskByOrderId));
      serviceBinder.AddMethod(__Method_GetTasksByOrderIds, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsRequest, global::CRMSolution.Grpc.Tasks.GetTasksByOrderIdsResponse>(serviceImpl.GetTasksByOrderIds));
      serviceBinder.AddMethod(__Method_GetTasksByUserIds, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsRequest, global::CRMSolution.Grpc.Tasks.GetTasksByUserIdsResponse>(serviceImpl.GetTasksByUserIds));
      serviceBinder.AddMethod(__Method_UpdateTask, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CRMSolution.Grpc.Tasks.UpdateTaskRequest, global::CRMSolution.Grpc.Tasks.TaskInfo>(serviceImpl.UpdateTask));
      serviceBinder.AddMethod(__Method_DeleteTask, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CRMSolution.Grpc.Tasks.DeleteTaskRequest, global::CRMSolution.Grpc.Tasks.DeleteTaskResponse>(serviceImpl.DeleteTask));
      serviceBinder.AddMethod(__Method_GetAllTasks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CRMSolution.Grpc.Tasks.GetAllTasksRequest, global::CRMSolution.Grpc.Tasks.GetAllTasksResponse>(serviceImpl.GetAllTasks));
    }

  }
}
#endregion
