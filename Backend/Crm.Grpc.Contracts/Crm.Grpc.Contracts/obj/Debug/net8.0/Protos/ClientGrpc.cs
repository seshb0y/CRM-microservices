// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/client.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace CRMSolution.Grpc.Client {
  public static partial class ClientGrpcService
  {
    static readonly string __ServiceName = "client.ClientGrpcService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Client.GetClientByEmailRequest> __Marshaller_client_GetClientByEmailRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Client.GetClientByEmailRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Client.GetClientResponse> __Marshaller_client_GetClientResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Client.GetClientResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Client.GetClientByIdRequest> __Marshaller_client_GetClientByIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Client.GetClientByIdRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Client.GetClientsByIdsRequest> __Marshaller_client_GetClientsByIdsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Client.GetClientsByIdsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Client.GetClientsByIdsResponse> __Marshaller_client_GetClientsByIdsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Client.GetClientsByIdsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Client.CreateClientRequest> __Marshaller_client_CreateClientRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Client.CreateClientRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Client.CreateClientResponse> __Marshaller_client_CreateClientResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Client.CreateClientResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Client.ChangeDataClientRequest> __Marshaller_client_ChangeDataClientRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Client.ChangeDataClientRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Client.ChangeDataClientResponse> __Marshaller_client_ChangeDataClientResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Client.ChangeDataClientResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Client.DeleteClientRequest> __Marshaller_client_DeleteClientRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Client.DeleteClientRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Client.DeleteClientResponse> __Marshaller_client_DeleteClientResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Client.DeleteClientResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Client.GetAllClientsRequest> __Marshaller_client_GetAllClientsRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Client.GetAllClientsRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Client.GetAllClientsResponse> __Marshaller_client_GetAllClientsResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Client.GetAllClientsResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Client.GetClientWithOrdersAndTasksRequest> __Marshaller_client_GetClientWithOrdersAndTasksRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Client.GetClientWithOrdersAndTasksRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Client.GetClientsWithOrdersAndTasksResponse> __Marshaller_client_GetClientsWithOrdersAndTasksResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Client.GetClientsWithOrdersAndTasksResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Client.GetDashboardDataRequest> __Marshaller_client_GetDashboardDataRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Client.GetDashboardDataRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::CRMSolution.Grpc.Client.GetDashboardDataResponse> __Marshaller_client_GetDashboardDataResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::CRMSolution.Grpc.Client.GetDashboardDataResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CRMSolution.Grpc.Client.GetClientByEmailRequest, global::CRMSolution.Grpc.Client.GetClientResponse> __Method_GetClientByEmail = new grpc::Method<global::CRMSolution.Grpc.Client.GetClientByEmailRequest, global::CRMSolution.Grpc.Client.GetClientResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetClientByEmail",
        __Marshaller_client_GetClientByEmailRequest,
        __Marshaller_client_GetClientResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CRMSolution.Grpc.Client.GetClientByIdRequest, global::CRMSolution.Grpc.Client.GetClientResponse> __Method_GetClientById = new grpc::Method<global::CRMSolution.Grpc.Client.GetClientByIdRequest, global::CRMSolution.Grpc.Client.GetClientResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetClientById",
        __Marshaller_client_GetClientByIdRequest,
        __Marshaller_client_GetClientResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CRMSolution.Grpc.Client.GetClientsByIdsRequest, global::CRMSolution.Grpc.Client.GetClientsByIdsResponse> __Method_GetClientsByIds = new grpc::Method<global::CRMSolution.Grpc.Client.GetClientsByIdsRequest, global::CRMSolution.Grpc.Client.GetClientsByIdsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetClientsByIds",
        __Marshaller_client_GetClientsByIdsRequest,
        __Marshaller_client_GetClientsByIdsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CRMSolution.Grpc.Client.CreateClientRequest, global::CRMSolution.Grpc.Client.CreateClientResponse> __Method_CreateClient = new grpc::Method<global::CRMSolution.Grpc.Client.CreateClientRequest, global::CRMSolution.Grpc.Client.CreateClientResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CreateClient",
        __Marshaller_client_CreateClientRequest,
        __Marshaller_client_CreateClientResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CRMSolution.Grpc.Client.ChangeDataClientRequest, global::CRMSolution.Grpc.Client.ChangeDataClientResponse> __Method_ChangeDataClient = new grpc::Method<global::CRMSolution.Grpc.Client.ChangeDataClientRequest, global::CRMSolution.Grpc.Client.ChangeDataClientResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ChangeDataClient",
        __Marshaller_client_ChangeDataClientRequest,
        __Marshaller_client_ChangeDataClientResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CRMSolution.Grpc.Client.DeleteClientRequest, global::CRMSolution.Grpc.Client.DeleteClientResponse> __Method_DeleteClient = new grpc::Method<global::CRMSolution.Grpc.Client.DeleteClientRequest, global::CRMSolution.Grpc.Client.DeleteClientResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteClient",
        __Marshaller_client_DeleteClientRequest,
        __Marshaller_client_DeleteClientResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CRMSolution.Grpc.Client.GetAllClientsRequest, global::CRMSolution.Grpc.Client.GetAllClientsResponse> __Method_GetAllClients = new grpc::Method<global::CRMSolution.Grpc.Client.GetAllClientsRequest, global::CRMSolution.Grpc.Client.GetAllClientsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetAllClients",
        __Marshaller_client_GetAllClientsRequest,
        __Marshaller_client_GetAllClientsResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CRMSolution.Grpc.Client.GetClientWithOrdersAndTasksRequest, global::CRMSolution.Grpc.Client.GetClientsWithOrdersAndTasksResponse> __Method_GetClientsWithOrdersAndTasks = new grpc::Method<global::CRMSolution.Grpc.Client.GetClientWithOrdersAndTasksRequest, global::CRMSolution.Grpc.Client.GetClientsWithOrdersAndTasksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetClientsWithOrdersAndTasks",
        __Marshaller_client_GetClientWithOrdersAndTasksRequest,
        __Marshaller_client_GetClientsWithOrdersAndTasksResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::CRMSolution.Grpc.Client.GetDashboardDataRequest, global::CRMSolution.Grpc.Client.GetDashboardDataResponse> __Method_GetDashboardData = new grpc::Method<global::CRMSolution.Grpc.Client.GetDashboardDataRequest, global::CRMSolution.Grpc.Client.GetDashboardDataResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetDashboardData",
        __Marshaller_client_GetDashboardDataRequest,
        __Marshaller_client_GetDashboardDataResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::CRMSolution.Grpc.Client.ClientReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of ClientGrpcService</summary>
    [grpc::BindServiceMethod(typeof(ClientGrpcService), "BindService")]
    public abstract partial class ClientGrpcServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CRMSolution.Grpc.Client.GetClientResponse> GetClientByEmail(global::CRMSolution.Grpc.Client.GetClientByEmailRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CRMSolution.Grpc.Client.GetClientResponse> GetClientById(global::CRMSolution.Grpc.Client.GetClientByIdRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CRMSolution.Grpc.Client.GetClientsByIdsResponse> GetClientsByIds(global::CRMSolution.Grpc.Client.GetClientsByIdsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CRMSolution.Grpc.Client.CreateClientResponse> CreateClient(global::CRMSolution.Grpc.Client.CreateClientRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CRMSolution.Grpc.Client.ChangeDataClientResponse> ChangeDataClient(global::CRMSolution.Grpc.Client.ChangeDataClientRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CRMSolution.Grpc.Client.DeleteClientResponse> DeleteClient(global::CRMSolution.Grpc.Client.DeleteClientRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CRMSolution.Grpc.Client.GetAllClientsResponse> GetAllClients(global::CRMSolution.Grpc.Client.GetAllClientsRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CRMSolution.Grpc.Client.GetClientsWithOrdersAndTasksResponse> GetClientsWithOrdersAndTasks(global::CRMSolution.Grpc.Client.GetClientWithOrdersAndTasksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::CRMSolution.Grpc.Client.GetDashboardDataResponse> GetDashboardData(global::CRMSolution.Grpc.Client.GetDashboardDataRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for ClientGrpcService</summary>
    public partial class ClientGrpcServiceClient : grpc::ClientBase<ClientGrpcServiceClient>
    {
      /// <summary>Creates a new client for ClientGrpcService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ClientGrpcServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ClientGrpcService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public ClientGrpcServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ClientGrpcServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected ClientGrpcServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.GetClientResponse GetClientByEmail(global::CRMSolution.Grpc.Client.GetClientByEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClientByEmail(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.GetClientResponse GetClientByEmail(global::CRMSolution.Grpc.Client.GetClientByEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetClientByEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.GetClientResponse> GetClientByEmailAsync(global::CRMSolution.Grpc.Client.GetClientByEmailRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClientByEmailAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.GetClientResponse> GetClientByEmailAsync(global::CRMSolution.Grpc.Client.GetClientByEmailRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetClientByEmail, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.GetClientResponse GetClientById(global::CRMSolution.Grpc.Client.GetClientByIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClientById(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.GetClientResponse GetClientById(global::CRMSolution.Grpc.Client.GetClientByIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetClientById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.GetClientResponse> GetClientByIdAsync(global::CRMSolution.Grpc.Client.GetClientByIdRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClientByIdAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.GetClientResponse> GetClientByIdAsync(global::CRMSolution.Grpc.Client.GetClientByIdRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetClientById, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.GetClientsByIdsResponse GetClientsByIds(global::CRMSolution.Grpc.Client.GetClientsByIdsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClientsByIds(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.GetClientsByIdsResponse GetClientsByIds(global::CRMSolution.Grpc.Client.GetClientsByIdsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetClientsByIds, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.GetClientsByIdsResponse> GetClientsByIdsAsync(global::CRMSolution.Grpc.Client.GetClientsByIdsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClientsByIdsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.GetClientsByIdsResponse> GetClientsByIdsAsync(global::CRMSolution.Grpc.Client.GetClientsByIdsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetClientsByIds, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.CreateClientResponse CreateClient(global::CRMSolution.Grpc.Client.CreateClientRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateClient(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.CreateClientResponse CreateClient(global::CRMSolution.Grpc.Client.CreateClientRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CreateClient, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.CreateClientResponse> CreateClientAsync(global::CRMSolution.Grpc.Client.CreateClientRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateClientAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.CreateClientResponse> CreateClientAsync(global::CRMSolution.Grpc.Client.CreateClientRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CreateClient, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.ChangeDataClientResponse ChangeDataClient(global::CRMSolution.Grpc.Client.ChangeDataClientRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeDataClient(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.ChangeDataClientResponse ChangeDataClient(global::CRMSolution.Grpc.Client.ChangeDataClientRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ChangeDataClient, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.ChangeDataClientResponse> ChangeDataClientAsync(global::CRMSolution.Grpc.Client.ChangeDataClientRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ChangeDataClientAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.ChangeDataClientResponse> ChangeDataClientAsync(global::CRMSolution.Grpc.Client.ChangeDataClientRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ChangeDataClient, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.DeleteClientResponse DeleteClient(global::CRMSolution.Grpc.Client.DeleteClientRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteClient(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.DeleteClientResponse DeleteClient(global::CRMSolution.Grpc.Client.DeleteClientRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteClient, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.DeleteClientResponse> DeleteClientAsync(global::CRMSolution.Grpc.Client.DeleteClientRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteClientAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.DeleteClientResponse> DeleteClientAsync(global::CRMSolution.Grpc.Client.DeleteClientRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteClient, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.GetAllClientsResponse GetAllClients(global::CRMSolution.Grpc.Client.GetAllClientsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllClients(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.GetAllClientsResponse GetAllClients(global::CRMSolution.Grpc.Client.GetAllClientsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetAllClients, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.GetAllClientsResponse> GetAllClientsAsync(global::CRMSolution.Grpc.Client.GetAllClientsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAllClientsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.GetAllClientsResponse> GetAllClientsAsync(global::CRMSolution.Grpc.Client.GetAllClientsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetAllClients, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.GetClientsWithOrdersAndTasksResponse GetClientsWithOrdersAndTasks(global::CRMSolution.Grpc.Client.GetClientWithOrdersAndTasksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClientsWithOrdersAndTasks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.GetClientsWithOrdersAndTasksResponse GetClientsWithOrdersAndTasks(global::CRMSolution.Grpc.Client.GetClientWithOrdersAndTasksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetClientsWithOrdersAndTasks, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.GetClientsWithOrdersAndTasksResponse> GetClientsWithOrdersAndTasksAsync(global::CRMSolution.Grpc.Client.GetClientWithOrdersAndTasksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetClientsWithOrdersAndTasksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.GetClientsWithOrdersAndTasksResponse> GetClientsWithOrdersAndTasksAsync(global::CRMSolution.Grpc.Client.GetClientWithOrdersAndTasksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetClientsWithOrdersAndTasks, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.GetDashboardDataResponse GetDashboardData(global::CRMSolution.Grpc.Client.GetDashboardDataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDashboardData(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::CRMSolution.Grpc.Client.GetDashboardDataResponse GetDashboardData(global::CRMSolution.Grpc.Client.GetDashboardDataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetDashboardData, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.GetDashboardDataResponse> GetDashboardDataAsync(global::CRMSolution.Grpc.Client.GetDashboardDataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetDashboardDataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::CRMSolution.Grpc.Client.GetDashboardDataResponse> GetDashboardDataAsync(global::CRMSolution.Grpc.Client.GetDashboardDataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetDashboardData, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override ClientGrpcServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ClientGrpcServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(ClientGrpcServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_GetClientByEmail, serviceImpl.GetClientByEmail)
          .AddMethod(__Method_GetClientById, serviceImpl.GetClientById)
          .AddMethod(__Method_GetClientsByIds, serviceImpl.GetClientsByIds)
          .AddMethod(__Method_CreateClient, serviceImpl.CreateClient)
          .AddMethod(__Method_ChangeDataClient, serviceImpl.ChangeDataClient)
          .AddMethod(__Method_DeleteClient, serviceImpl.DeleteClient)
          .AddMethod(__Method_GetAllClients, serviceImpl.GetAllClients)
          .AddMethod(__Method_GetClientsWithOrdersAndTasks, serviceImpl.GetClientsWithOrdersAndTasks)
          .AddMethod(__Method_GetDashboardData, serviceImpl.GetDashboardData).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, ClientGrpcServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_GetClientByEmail, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CRMSolution.Grpc.Client.GetClientByEmailRequest, global::CRMSolution.Grpc.Client.GetClientResponse>(serviceImpl.GetClientByEmail));
      serviceBinder.AddMethod(__Method_GetClientById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CRMSolution.Grpc.Client.GetClientByIdRequest, global::CRMSolution.Grpc.Client.GetClientResponse>(serviceImpl.GetClientById));
      serviceBinder.AddMethod(__Method_GetClientsByIds, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CRMSolution.Grpc.Client.GetClientsByIdsRequest, global::CRMSolution.Grpc.Client.GetClientsByIdsResponse>(serviceImpl.GetClientsByIds));
      serviceBinder.AddMethod(__Method_CreateClient, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CRMSolution.Grpc.Client.CreateClientRequest, global::CRMSolution.Grpc.Client.CreateClientResponse>(serviceImpl.CreateClient));
      serviceBinder.AddMethod(__Method_ChangeDataClient, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CRMSolution.Grpc.Client.ChangeDataClientRequest, global::CRMSolution.Grpc.Client.ChangeDataClientResponse>(serviceImpl.ChangeDataClient));
      serviceBinder.AddMethod(__Method_DeleteClient, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CRMSolution.Grpc.Client.DeleteClientRequest, global::CRMSolution.Grpc.Client.DeleteClientResponse>(serviceImpl.DeleteClient));
      serviceBinder.AddMethod(__Method_GetAllClients, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CRMSolution.Grpc.Client.GetAllClientsRequest, global::CRMSolution.Grpc.Client.GetAllClientsResponse>(serviceImpl.GetAllClients));
      serviceBinder.AddMethod(__Method_GetClientsWithOrdersAndTasks, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CRMSolution.Grpc.Client.GetClientWithOrdersAndTasksRequest, global::CRMSolution.Grpc.Client.GetClientsWithOrdersAndTasksResponse>(serviceImpl.GetClientsWithOrdersAndTasks));
      serviceBinder.AddMethod(__Method_GetDashboardData, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::CRMSolution.Grpc.Client.GetDashboardDataRequest, global::CRMSolution.Grpc.Client.GetDashboardDataResponse>(serviceImpl.GetDashboardData));
    }

  }
}
#endregion
